name: simulation
root: ./
startup_window: planning
pre_window: export UAV_NAME=uav1; export RUN_TYPE=simulation; export UAV_TYPE=t650; export WORLD_FILE=./custom_configs/world.yaml; export SENSORS="garmin_down"; export ODOMETRY_TYPE="rtk"
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_simulation simulation.launch world_file:='$(find aerialcore_simulation)/worlds/power_towers_danube_wires_rescaled_jeff_autospawn.world' gui:=true
          #- waitForOdometry; gz camera -c gzclient_camera -f uav1; history -s gz camera -c gzclient_camera -f uav1
         # #{ To connect the camera frame to the inertial frame -- static_transform_publisher x y z qx qy qz qw # #}
        - 'export UAV_NAME=uav1; waitForOdometry; rosrun tf2_ros static_transform_publisher 0.85 0 0 0.5 -0.5 0.5 -0.5 ${UAV_NAME}/fcu ${UAV_NAME}/rgbd/color_optical'
  - spawn:
      layout: tiled
      panes:
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "1 $UAV_TYPE --enable-rangefinder --enable-ground-truth --enable-realsense-front --pos_file `pwd`/pos.csv"; exit
  - planning:
      layout: tiled
      panes:
        - waitForSimulation; roslaunch human_aware_collaboration_planner simulation.launch ual_backend:=mrs_mavros number_UAV:=1 ns_prefix:=uav world:=none
  #- status:
      #layout: tiled
      #panes:
        #- export UAV_NAME=uav1; waitForSimulation; roslaunch mrs_uav_status status.launch
  - control:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForOdometry; roslaunch mrs_uav_general core.launch config_uav_manager:=./custom_configs/uav_manager.yaml config_constraint_manager:=./custom_configs/constraint_manager.yaml config_mpc_tracker:=./custom_configs/mpc_tracker.yaml config_odometry:=./custom_configs/odometry.yaml
  - automatic_start:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
  - takeoff:
      layout: tiled
      panes: 
        # #{ uav1
        - 'export UAV_NAME=uav1;
          waitForControl;
          rosservice call /${UAV_NAME}/mavros/cmd/arming 1'
          #sleep 2;
          #rosservice call /${UAV_NAME}/mavros/set_mode 0 offboard' ## Gives the control to the MRS system
        # #}
  #- rosbag:
      #layout: tiled
      #panes:
        #- 'history -s ./record.sh'
  - virtual_mesh_visualizer:
      layout: tiled
      panes:
        # #{ uav1
        - 'export UAV_NAME=uav1; export NODE_NAME=uav1_tw; waitForSimulation; roslaunch virtual_obstacles_visualizer virtual_obstacles_visualizer.launch config:=./custom_configs/virtual_object_visualizer_tower.yaml frame_origin:=rtk_origin'
        - 'export UAV_NAME=uav1; export NODE_NAME=uav1_rs1; waitForSimulation; roslaunch virtual_obstacles_visualizer virtual_obstacles_visualizer.launch config:=./custom_configs/virtual_object_visualizer_rs1.yaml frame_origin:=rtk_origin'
        - 'export UAV_NAME=uav1; export NODE_NAME=uav1_rs2; waitForSimulation; roslaunch virtual_obstacles_visualizer virtual_obstacles_visualizer.launch config:=./custom_configs/virtual_object_visualizer_rs2.yaml frame_origin:=rtk_origin'
        - 'export UAV_NAME=uav1; export NODE_NAME=uav1_rs3; waitForSimulation; roslaunch virtual_obstacles_visualizer virtual_obstacles_visualizer.launch config:=./custom_configs/virtual_object_visualizer_rs3.yaml frame_origin:=rtk_origin'
        - 'export UAV_NAME=uav1; export NODE_NAME=uav1_rs4; waitForSimulation; roslaunch virtual_obstacles_visualizer virtual_obstacles_visualizer.launch config:=./custom_configs/virtual_object_visualizer_rs4.yaml frame_origin:=rtk_origin'
        - 'export UAV_NAME=uav1; export NODE_NAME=uav1_rs5; waitForSimulation; roslaunch virtual_obstacles_visualizer virtual_obstacles_visualizer.launch config:=./custom_configs/virtual_object_visualizer_rs5.yaml frame_origin:=rtk_origin'
        - 'export UAV_NAME=uav1; export NODE_NAME=uav1_jeff_p; waitForSimulation; roslaunch virtual_obstacles_visualizer virtual_obstacles_visualizer.launch config:=./custom_configs/virtual_object_visualizer_human_pick frame_origin:=rtk_origin'
        - 'export UAV_NAME=uav1; export NODE_NAME=uav1_jeff_d; waitForSimulation; roslaunch virtual_obstacles_visualizer virtual_obstacles_visualizer.launch config:=./custom_configs/virtual_object_visualizer_human_deli frame_origin:=rtk_origin'
        - 'export UAV_NAME=uav1; export NODE_NAME=uav1_jeff_m; waitForSimulation; roslaunch virtual_obstacles_visualizer virtual_obstacles_visualizer.launch config:=./custom_configs/virtual_object_visualizer_human_mon frame_origin:=rtk_origin'
        # #}
  - tf_connector:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_uav_odometry tf_connector.launch custom_config:=./custom_configs/tf_connector.yaml
  - rviz:
      layout: tiled
      panes:
        - waitForControl; rosrun rviz rviz -d rviz.rviz
        - waitForControl; export UAV_NAME=uav1; roslaunch mrs_rviz_plugins load_robot.launch
